<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MySQL on 林风's Blog</title><link>https://leoxiewl.github.io/tags/mysql/</link><description>Recent content in MySQL on 林风's Blog</description><generator>Hugo</generator><language>zh-CN</language><copyright>林风的博客</copyright><lastBuildDate>Mon, 26 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://leoxiewl.github.io/tags/mysql/index.xml" rel="self" type="application/rss+xml"/><item><title>高性能MySQL-高性能MySQL-schema设计与管理</title><link>https://leoxiewl.github.io/%E9%AB%98%E6%80%A7%E8%83%BDmysql-schema%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AE%A1%E7%90%86/</link><pubDate>Mon, 26 Feb 2024 00:00:00 +0000</pubDate><guid>https://leoxiewl.github.io/%E9%AB%98%E6%80%A7%E8%83%BDmysql-schema%E8%AE%BE%E8%AE%A1%E4%B8%8E%E7%AE%A1%E7%90%86/</guid><description>&lt;h2 id="数据类型设计基本原则">数据类型设计基本原则&lt;/h2>
&lt;p>&lt;strong>更小的通常更好&lt;/strong>&lt;/p>
&lt;p>一般来说，尽量使用能够正确存储和表示数据的最小数据类型。&lt;/p>
&lt;p>更小的数据类型&lt;strong>更快&lt;/strong>，因为他们占用的磁盘、内存和CPU缓存的空间更少，处理时需要的CPU周期也更少。&lt;/p></description></item><item><title>高性能MySQL-MySQL查询优化</title><link>https://leoxiewl.github.io/%E9%AB%98%E6%80%A7%E8%83%BDmysql-mysql%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</link><pubDate>Fri, 09 Feb 2024 00:00:00 +0000</pubDate><guid>https://leoxiewl.github.io/%E9%AB%98%E6%80%A7%E8%83%BDmysql-mysql%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</guid><description>&lt;p>要实现高效的查询，&lt;strong>查询优化、索引优化、库表结构优化&lt;/strong>需要齐头并进。&lt;/p>
&lt;p>本文主要围绕查询性能的优化&lt;/p>
&lt;h2 id="为什么查询的速度会慢">为什么查询的速度会慢？&lt;/h2>
&lt;p>关键在于响应时间。&lt;/p>
&lt;p>执行一个任务，可能这个任务由一系列的任务组成，只要优化它其中的子任务，让子任务运行的快，或者直接消除子任务，就能让整个响应时间快起来。在查询的整个过程中，从客户端到服务器，然后在服务器上进行语法解析，生成执行计划之后执行，再返回到客户端，要经过复杂的历程。&lt;/p></description></item></channel></rss>